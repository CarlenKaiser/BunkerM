server {
    listen 2000 ssl;
    ssl_certificate /app/certs/cert.pem;
    ssl_certificate_key /app/certs/key.pem;

    # SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256;

    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # Frontend
    location / {
        root /usr/share/nginx/html;
        try_files $uri $uri/ /index.html;

        # CORS headers
        add_header 'Access-Control-Allow-Origin' 'https://127.0.0.1:2000' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE, PUT' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,X-API-Key' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
    }

    # Monitor API proxy
   location /api/monitor/ {
       proxy_pass https://127.0.0.1:1001/api/v1/;
       proxy_set_header Host $host;
       proxy_set_header X-Real-IP $remote_addr;
       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
       proxy_set_header X-Forwarded-Proto $scheme;
       
       # Add these lines
       proxy_ssl_verify off;
       proxy_ssl_session_reuse on;
       
       # CORS headers
       add_header 'Access-Control-Allow-Origin' 'https://127.0.0.1:2000' always;
       add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE, PUT' always;
       add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,X-API-Key' always;
       add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
   }
   

# Event API proxy
location /api/event/ {
    proxy_pass https://127.0.0.1:1002/api/v1/; 
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    # Only use basic SSL settings like monitor
    proxy_ssl_verify off;
    proxy_ssl_session_reuse on;

    # CORS headers
    add_header 'Access-Control-Allow-Origin' 'https://127.0.0.1:2000' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE, PUT' always;
    add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,X-API-Key' always;
    add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
}


# Dynsec API proxy
location /api/dynsec/ {
    proxy_pass https://127.0.0.1:1000/api/v1/;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-API-Key $http_x_api_key;

    # SSL settings
    proxy_ssl_verify off;
    proxy_ssl_session_reuse on;

    # Extended timeout settings for file uploads
    proxy_connect_timeout 180s;
    proxy_send_timeout 180s;
    proxy_read_timeout 180s;

    # File upload settings
    client_max_body_size 10M;     # Allow larger file uploads
    proxy_request_buffering off;  # Stream files instead of buffering

    # Debug logging - enable temporarily to diagnose issues
    error_log /var/log/nginx/dynsec_error.log debug;
    access_log /var/log/nginx/dynsec_access.log combined;

    # Add CORS headers
    add_header 'Access-Control-Allow-Origin' 'https://127.0.0.1:2000' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE, PUT' always;
    add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,X-API-Key' always;
    add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

    # Handle OPTIONS method
    if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' 'https://127.0.0.1:2000';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE, PUT';
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,X-API-Key';
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Type' 'text/plain; charset=utf-8';
        add_header 'Content-Length' 0;
        return 204;
    }
}

location /api/dynsec/import-password-file {
    proxy_pass https://127.0.0.1:1000/api/v1/import-password-file;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-API-Key $http_x_api_key;

    # SSL settings
    proxy_ssl_verify off;
    proxy_ssl_session_reuse on;

    # Extended timeout settings for file uploads
    proxy_connect_timeout 180s;
    proxy_send_timeout 180s;
    proxy_read_timeout 180s;

    # File upload settings
    client_max_body_size 10M;     # Allow larger file uploads
    proxy_request_buffering off;  # Stream files instead of buffering

    # CORS headers
    add_header 'Access-Control-Allow-Origin' 'https://127.0.0.1:2000' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE, PUT' always;
    add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,X-API-Key' always;
    add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

    # Handle OPTIONS method
    if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' 'https://127.0.0.1:2000';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE, PUT';
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,X-API-Key';
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Type' 'text/plain; charset=utf-8';
        add_header 'Content-Length' 0;
        return 204;
    }
}

location /api/dynsec/password-file-status {
    proxy_pass https://127.0.0.1:1000/api/v1/password-file-status;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-API-Key $http_x_api_key;

    # SSL settings
    proxy_ssl_verify off;
    proxy_ssl_session_reuse on;

    # CORS headers
    add_header 'Access-Control-Allow-Origin' 'https://127.0.0.1:2000' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE, PUT' always;
    add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,X-API-Key' always;
    add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

    # Handle OPTIONS method
    if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' 'https://127.0.0.1:2000';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE, PUT';
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,X-API-Key';
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Type' 'text/plain; charset=utf-8';
        add_header 'Content-Length' 0;
        return 204;
    }
}



# AWS Bridge API proxy
location /api/aws-bridge/ {
    proxy_pass https://127.0.0.1:1003/api/v1/;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-API-Key $http_x_api_key;

    # SSL settings
    proxy_ssl_verify off;
    proxy_ssl_session_reuse on;

    # File upload settings
    client_max_body_size 10M;
    proxy_request_buffering off;

    # Timeout settings
    proxy_connect_timeout 90s;
    proxy_send_timeout 90s;
    proxy_read_timeout 90s;

    # Debug logging
    error_log /var/log/nginx/aws_bridge_error.log debug;
    access_log /var/log/nginx/aws_bridge_access.log combined;

    # Add CORS headers
    add_header 'Access-Control-Allow-Origin' 'https://127.0.0.1:2000' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE, PUT' always;
    add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,X-API-Key' always;
    add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

    # Handle OPTIONS method
    if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' 'https://127.0.0.1:2000';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE, PUT';
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,X-API-Key';
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Type' 'text/plain; charset=utf-8';
        add_header 'Content-Length' 0;
        return 204;
    }

    # Add security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-XSS-Protection "1; mode=block" always;
}

# Azure IoT Hub Bridge API proxy
location /api/azure-bridge/ {
    proxy_pass https://127.0.0.1:1004/api/v1/;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-API-Key $http_x_api_key;

    # SSL settings
    proxy_ssl_verify off;
    proxy_ssl_session_reuse on;

    # File upload settings
    client_max_body_size 10M;
    proxy_request_buffering off;

    # Timeout settings
    proxy_connect_timeout 90s;
    proxy_send_timeout 90s;
    proxy_read_timeout 90s;

    # Debug logging
    error_log /var/log/nginx/azure_bridge_error.log debug;
    access_log /var/log/nginx/azure_bridge_access.log combined;

    # Add CORS headers
    add_header 'Access-Control-Allow-Origin' 'https://127.0.0.1:2000' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE, PUT' always;
    add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,X-API-Key' always;
    add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

    # Handle OPTIONS method
    if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' 'https://127.0.0.1:2000';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE, PUT';
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,X-API-Key';
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Type' 'text/plain; charset=utf-8';
        add_header 'Content-Length' 0;
        return 204;
    }

    # Add security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-XSS-Protection "1; mode=block" always;
}

}