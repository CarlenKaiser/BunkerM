[supervisord]
nodaemon=true
user=root
logfile=/var/log/supervisor/supervisord.log
pidfile=/tmp/supervisord.pid
childlogdir=/var/log/supervisor
loglevel=info

[unix_http_server]
file=/tmp/supervisor.sock
chmod=0700

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix:///tmp/supervisor.sock

# Mosquitto MQTT Broker - Start first
[program:mosquitto]
command=/usr/sbin/mosquitto -c /etc/mosquitto/mosquitto.conf
autostart=true
autorestart=true
stderr_logfile=/var/log/supervisor/mosquitto.err.log
stdout_logfile=/var/log/supervisor/mosquitto.out.log
user=mosquitto
startretries=10
priority=100

# Wait script to ensure Mosquitto is ready
[program:wait-for-mosquitto]
command=/bin/sh -c 'until nc -z localhost 1900; do echo "Waiting for Mosquitto..."; sleep 2; done; echo "Mosquitto is ready!"'
autostart=true
autorestart=false
startretries=30
exitcodes=0
redirect_stderr=true
stdout_logfile=/var/log/supervisor/wait-mosquitto.log
priority=200

# Monitor API - Start after Mosquitto is ready
[program:monitor-api]
command=/opt/venv/bin/uvicorn main:app --host 0.0.0.0 --port 1001
directory=/app/monitor
autostart=true
autorestart=true
stderr_logfile=/var/log/supervisor/monitor-api.err.log
stdout_logfile=/var/log/supervisor/monitor-api.out.log
user=root
environment=PYTHONPATH="/app/monitor",MQTT_BROKER="localhost",MQTT_PORT="1900",MQTT_USERNAME="bunker",MQTT_PASSWORD="bunker"
startretries=10
priority=300
depends_on=wait-for-mosquitto

# Client Logs Processor
[program:clientlogs]
command=/opt/venv/bin/python /app/clientlogs/main.py
directory=/app
autostart=true
autorestart=true
stderr_logfile=/var/log/clientlogs.err.log
stdout_logfile=/var/log/clientlogs.log
user=root
startretries=5
priority=300
depends_on=wait-for-mosquitto

# AWS Bridge API
[program:aws-bridge-api]
command=/opt/venv/bin/uvicorn main:app --host 0.0.0.0 --port 1003
directory=/app/aws-bridge
autostart=true
autorestart=true
stderr_logfile=/var/log/supervisor/aws-bridge-api.err.log
stdout_logfile=/var/log/supervisor/aws-bridge-api.out.log
user=root
environment=PYTHONPATH="/app/aws-bridge"
startretries=5
priority=300
depends_on=wait-for-mosquitto

# Dynamic Security API
[program:dynsec-api]
command=/opt/venv/bin/uvicorn main:app --host 0.0.0.0 --port 1000
directory=/app/dynsec
autostart=true
autorestart=true
stderr_logfile=/var/log/supervisor/dynsec-api.err.log
stdout_logfile=/var/log/supervisor/dynsec-api.out.log
user=root
environment=PYTHONPATH="/app/dynsec"
startretries=5
priority=300
depends_on=wait-for-mosquitto

# Azure Bridge API
[program:azure-bridge-api]
command=/opt/venv/bin/uvicorn main:app --host 0.0.0.0 --port 1004
directory=/app/azure-bridge
autostart=true
autorestart=true
stderr_logfile=/var/log/supervisor/azure-bridge-api.err.log
stdout_logfile=/var/log/supervisor/azure-bridge-api.out.log
user=root
environment=PYTHONPATH="/app/azure-bridge"
startretries=5
priority=300
depends_on=wait-for-mosquitto

# Configuration API
[program:config-api]
command=/opt/venv/bin/uvicorn main:app --host 0.0.0.0 --port 1005
directory=/app/config
autostart=true
autorestart=true
stderr_logfile=/var/log/supervisor/config-api.err.log
stdout_logfile=/var/log/supervisor/config-api.out.log
user=root
environment=PYTHONPATH="/app/config",DYNSEC_JSON_PATH="/var/lib/mosquitto/dynamic-security.json",DYNSEC_BACKUP_DIR="/tmp/dynsec_backups",MOSQUITTO_CONF_PATH="/etc/mosquitto/mosquitto.conf",MOSQUITTO_BACKUP_DIR="/tmp/mosquitto_backups"
startretries=5
priority=300
depends_on=wait-for-mosquitto

# Authentication API
[program:auth-api]
command=node /frontend/src/auth/auth-api.js
directory=/frontend/src/auth
autostart=true
autorestart=true
stderr_logfile=/var/log/supervisor/auth-api.err.log
stdout_logfile=/var/log/supervisor/auth-api.out.log
user=root
environment=AUTH_API_PORT="3001",DB_PATH="/data"
startretries=10
priority=300
depends_on=wait-for-mosquitto

# Nginx - Web server (start last)
[program:nginx]
command=nginx -g 'daemon off;'
autostart=true
autorestart=true
stderr_logfile=/var/log/supervisor/nginx.err.log
stdout_logfile=/var/log/supervisor/nginx.out.log
user=root
startretries=5
priority=999

# Health check script
[program:health-check]
command=/bin/sh -c 'while true; do sleep 60; curl -f http://localhost:1001/health >/dev/null 2>&1 || echo "Health check failed at $(date)"; done'
autostart=true
autorestart=true
redirect_stderr=true
stdout_logfile=/var/log/supervisor/health-check.log
priority=1000